#!/usr/bin/env python
from sys import argv
from litter import LtrSpace, LtrBox
import os

if __name__ == "__main__":
    
    dryrun = False
    opts = argv
    opts.pop(0)
    if len(argv):
        if "-n" in opts:
            dryrun = True
            print "performing dryrun"
            opts.remove("-n")
        cmd = opts.pop(0)
    else:
        cmd = "status"

    if cmd == "create":
        uri = opts.pop(0).strip()
        directory = opts.pop(0)
        space = LtrSpace().createfromUri(uri)
        box = LtrBox(space).setUri(uri)
        box.create()
        box.setPath(directory)
        box.writeCookie()

    if cmd == "clone":
        name = opts.pop(0).strip()
        src = opts.pop(0).strip()
        dst = opts.pop(0).strip()

        if os.path.isdir(src):
            srcbox = LtrSpace.boxFromCookie(src)
        else:
            space = LtrSpace().setUri(src)
            srcbox = space.getBox(space.boxname)
        
        dstbox = LtrBox(srcbox.space)
        dstbox.setPath(dst)
        dstbox.setName(name)
        dstbox.create()
        dstbox.writeCookie()

    if cmd == "commit":
        box = LtrSpace.boxFromCookie(os.getcwd())
        box.commit(dryrun=False)

    if cmd == "diff":
        pass

    if cmd == "status":
        box = LtrSpace.boxFromCookie(os.getcwd())
        box.commit(dryrun=True)

    if cmd == "show":
        box = LtrSpace.boxFromCookie(os.getcwd())
        print box.info(),

    if cmd == "set":
        box = LtrSpace.boxFromCookie(os.getcwd())
        key = opts.pop(0)
        value = opts.pop(0)
        box.space.setopt(key,value)

    if cmd == "stat":
        box = LtrSpace.boxFromCookie(os.getcwd())
        fname = opts.pop(0)
        node = box.getDrop(box.pathConv(fname))
        if node != None:
            print node.stat(),

    if cmd == "pull":
        dst = os.getcwd()
        src = opts.pop(0)
        dstbox = LtrSpace.boxFromCookie(dst)
        srcbox = LtrSpace.boxFromCookie(src,space=dstbox.space)

        dstbox.pull(srcbox,dryrun=dryrun)

    if cmd == "branch" or cmd == "box":
        box = LtrSpace.boxFromCookie(os.getcwd())
        bn= box.space.getBoxNames()
        def check(test,compare):
            if test==compare:
                return "* "
            else:
                return "  "
        for boxname in bn:
            print check(boxname,box.id),boxname


    if cmd == "ls":
        thisbox = LtrSpace.boxFromCookie(os.getcwd())
        if len(opts):
            boxid = opts.pop(0)
            box = thisbox.space.getBox(boxid)
        else:
            box = thisbox
 
        f = box.getDrop(box.pathConv(""))
        print "\n".join(map(lambda x: x.name, f.children()))

