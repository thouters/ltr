#!/usr/bin/env python
from sys import argv
from litter import LtrBox
import os

if __name__ == "__main__":
    
    opts = argv
    opts.pop(0)
    if len(argv):
        cmd = opts.pop(0)
    else:
        cmd = "status"

    if cmd == "create":
        uri = opts.pop(0).strip()
        directory = opts.pop(0)
        box = LtrBox()
        box.createfromUri(uri)
        box.setPath(directory)
        box.writeCookie()

    if cmd == "clone":
        name = opts.pop(0).strip()
        src = opts.pop(0).strip()
        dst = opts.pop(0).strip()

        srcbox = LtrBox().fromCookie(src)
        
        dstbox = LtrBox(srcbox.space)
        dstbox.setPath(dst)
        dstbox.setName(name)
        dstbox.create()
        dstbox.writeCookie()

    if cmd == "commit":
        #crawl, show diff of changes
        box = LtrBox().fromCookie(os.getcwd())
        box.crawl(commit=True)

    if cmd == "diff":
        pass

    if cmd == "status":
        #crawl, show diff of changes
        box = LtrBox().fromCookie(os.getcwd())
        box.crawl(commit=False)

    if cmd == "pull":
        dst = os.getcwd()
        src = opts.pop(0)
        dstbox = LtrBox().fromCookie(dst)

        srcbox = LtrBox(dstbox.space).fromCookie(src)

        dstbox.pull(srcbox)

    if cmd == "ls":
        thisbox = LtrBox().fromCookie(os.getcwd())
        if len(opts):
            boxid = opts.pop(0)
            box = LtrBox(thisbox.space).setUri(thisbox.space.getBoxUri(boxid))
        else:
            box = thisbox
 
        if box.cwd:
            f = box.cwd
        else:
            f = box.dropbox

        print "\n".join(map(lambda x: x.name, f.getIndex(box)))

