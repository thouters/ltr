
FIXME: .diff compares flags, will compare unique attributes;
 restrict this to c copy/checked

boxurl -> urls

removing file from disk changes it to "Trashed" state.
ltr tidy makes you choose:
 a) propagate deleted status to other boxes
 b) marking file(s) as "skip" for local box


node-logentry-example:
    doctype: node
    log: {"{{timestamp}}":[{"type":"edit"},{}]}

log-view-summary-example:
    ([timestamp,boxid],[fileid,action])
    
Ltr wishlist

# Tarball incremental backup plugin 
# Pgp encrypted files plugin
# time machine plugin
# Flat checkout plugin; commit does not add new files, you have to ltr insert path filename
# box quota
# redundancy plugin
# online/offline attribute
 disk-by-label://green/Mybox

ltr diff
ltr update (trigger couchdb replicate)
ltr: "ping boxname" command (attempt to access other box and set it as origin) 

node.present -> create node document for every drop.
node{ftype=dir} -> documenttype node

ltrbox crawler: generic api to be shared between pull and index
ltrbox crawler: unittests
document: pull request: {ctime, status, uri=user@host:/path}
client: wait on _changes for pull requests
ltr: node attribute 'missing'; missing.append(boxname) for boxname if boxname.policy == complete
ltr: missing; yield [boxname,nest-depth,id] for node if len(node.missing)
ltrnode property: meta.nest-depth
path property: use parent id
code: license headers
database: need more abstraction
status: recognise change in filetypes
ltrbox property: repository (expect no user edits)
ltrnode property: added-to-volume-time 
ltrbox property: rootchild
ltrbox id: human readable
ltrnode property: pending = [boxid,..] copy file to box
client: DB replication 
client: status diffstat-style output
client: couchdb conflict handling
client: transaction logging to DB (commit/pull document)
client: keep file history 
